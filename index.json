[{"content":" 本文记录如何使用 Surge 将家中的 Mac 电脑成为家中其他设备科学上网的中转站。\n前情提要 今年 618 大促入手人生第一台掌机游戏机 Nintendo Switch OLED 版（日版），Switch 游戏可以从eshop 中下载，但是国内直接访问下载 eshop 中的游戏速度可以说是龟速。得知 Switch 中 eshop 需要和 Steam 一样开启游戏加速器才能正常使用。但是 UU 加速器使用包年需要 283 RMB，就不舍得（对，我就是那种买贵东西不眨眼，但是买便宜附属品时斤斤计较的人🙄）。\n我记起来之前看过其他人用 Surge 把 Mac 当中代理转发让 Apple TV 可以顺利地访问（科学上网），我到网上查找教程，果然真的可以，于是就有了这篇教程，也是做一个记录，以便以后翻阅。\n前期环境准备 Surge for Mac （通过 Mac 电脑作为中间商为其他设备作为代理转发） Mac Studio （接着网线的，配置好之后是不能关机的，我试过 Mac 电脑休眠之后 Surge 软件是会自动退出的，所以需要保持电脑不要休眠，如果休眠了需要重新开启才能继续使用） M1 Max 运存：64 G 系统：masOS Monterey 12.4 机场订阅地址（没有的话需要自己找一下😂，科学上网必备） 以下教程默认已经准备好以上的 3 个条件\nSurge Surge 介绍 总览 Surge 是一个网络开发和代理工具。他是为开发者打造的工具，所以使用时需要具备一定的专业知识。\n以下四种是 Surge 的核心工作流。\n接管：接管设备发起的网络连接。Surge 支持代理服务器和虚拟网卡两种接管模式。 处理：可以修改已经接管的网络请求和响应。包括 URL 重定向、本地文件映射、使用 JavaScript 自定义修改等多种方法。 转发：可以将已接管的网络请求转发到其他代理服务器。这可以是全局转发，也可以通过灵活的规则系统来确定出站策略。 拦截：可以拦截并保存网络请求和响应的数据，也可以通过 MITM 解密 HTTPS 流量。 我们这里主要使用的是转发\n特点 我使用 Surge 这个软件主要是被它这几个特点吸引的：\n高性能、稳定、高效率：Surge 可以在耗费极少资源并且保持高稳定性的前提下轻松处理网络数据，配合 M1 芯片更加节能和稳定 增强模式：Surge 会设置一个虚拟网络去接管所有的网络请求，尤其是那些对 Web 代理支持不好的软件。 网关模式：Surge Mac 可以当做三层网关去处理同网络下其他设备的网络请求。（简单来说就可以当做一个路由器，成为家中网络枢纽） Surge 下载与购买 下载 Surge for Mac 可以直接在 Surge 官网下载，我下载的版本是最新版，Surge 4.6.1 (1718) ，下载完之后是一个压缩包，解压之后把 app 拖到应用程序中即可打开使用了。\n但是下载之后并不能直接科学上网的，还是需要花钱进行购买，到官网进行授权购买，购买 1 台设备授权 49.99 美刀，3 台设备授权 69.99 美刀，5 台设备授权 99.99 美刀，支持支付宝付款，这里我买的是 3 台设备授权（我是想在过年回家也可以给家里也弄一个就买的3台），实花 471.13 RMB （根据当时汇率波动，心疼啊），可以根据个人需求进行购买，至少购买 1 台。\n购买之后就可以根据购买时的邮箱地址和购买之后给你邮箱发的激活码对 Surge 进行激活。\nSurge 接管 Mac 网络 接下来就可以让 Surge 接管 Mac 电脑的网络了（让 Mac 可以科学上网），这时候就需要你有机场的订阅地址了。\n往 Surge 中添加配置文件\n这里使用的是从 URL 安装配置文件，你也可以通过文件进行导入或者自己手动添加配置。\n如果你订阅的机场是直接有 Surge 的订阅地址可以直接添加，如果没有，但是有v2ray、ss 、trojan 的订阅也是可以的，通过第三方订阅转换生成 Surge 可以识别的 URL 。\n选择基础模式，如果你想自定义你想要的特定节点可以选择进阶模式 在订阅链接中粘贴上你订阅机场的订阅地址 在客户端下拉框中选择 Surge4 点击红色生成订阅链接就可以生成定制订阅 URL，点击复制 打开 Surge 主界面左下角更多，选择设置中的配置\n选择从 URL 安装配置文件\n粘贴你刚才由第三方生成的配置文件订阅地址，然后选择完成，等待一会 Surge 就会对规则策略进行导入\n等 Surge 识别完成之后会出现一个新的托管配置，选中这个新的配置，并点击右下角应用\n回到 Surge 主界面，选中代理下的策略，选择 规则判定 ，这时检测一下科学上网是否成功了，如果不行，点击标签栏的 Surge 检查一下是否勾选了 设置为系统代理 和 增强模式，没有勾选可以勾选上，并重启一下 Surge\n到此你的 Mac 就可以愉快地上网了\n让 Mac 成为家中网络枢纽 上面的步骤已经可以让 Mac 电脑愉快地上网了，但是独乐了不如众乐乐，那怎么让家里其他设备也可以愉快地上网呢？\n这里就需要用到 Surge 的 DHCP 服务器这个功能了，也就是上面介绍过的网关模式。\n设置电脑 IP 为静态IP 打开 系统偏好设置-网络，选择以太网（也就是网线接口） 配置 IPv4 选择 使用 DHCP（手动设定地址） 我的路由器是 192.168.1.1 所以 IP 地址我就填 192.168.1.2，只用修改最后一位在 2-225 之间就行。（如果你的路由器是 192.168.0.1 你的 IP 地址就可以填 192.168.0.2，以此类推） 随后选择 应用 注意：这里设置之前先把 Surge 设置为系统代理先关掉，开启会影响后面 ip 地址设置，建议先关掉，后面设置完之后再开启。\n关闭路由器 DHCP 登录到你们家的路由器管理后台，在管理页面中找到 DHCP 服务器设置，把路由器的 DHCP 关掉（一般路由器都会有这个选项）\n打开 Surge DHCP 选项 在Surge左侧 设备 里，点开后最下面有 DHCP 服务器 开关，点开后选择下一步。\n插网线的选择 Ethernet ，点击下一步。\nSurge 会检测当前网络环境是否有 DHCP 设置，如果上面你正确关闭了 路由器 DHCP 这里应该能直接生成配置\n选择 Surge 默认的设置点击完成即可，如果你发现这里路由地址为空（我一开始在这里卡了很久，后面发现选错了网络设备，选成了Ethernet Adapter (en6)），你就要检查一下哪里步骤出错了\n启动完 DHCP 服务器之后可以看到设备列表没有任何设备，这时需要重启一下路由器或者让你想使用的设备重新连接一下wifi，就可以在新增设备中看到\n添加设备成员 想要科学上网的设备可以右键选择设备名，然后选择 使用 Surge 作为网关，然后设备重新连接wifi或者关闭路由器 wifi 再打开即可。\n没连接上会显示等待连接，这里建议把设置固定 IP 地址也选上，这时官网推荐的做法，方便以后设备管理和连接。\n苹果手机和平板，由于注重隐私的原因会默认在连接 Wifi 的时候选上使用私有无线局域网地址进行连接（使用私有地址有助于减少不同无线局域网对 iPhone 的跟踪），这里需要把这个选项关掉重新连接 wifi 才能让 Surge 识别出你的设备。\n如果不清楚 IP 地址具体对应哪台设备，可以到路由器管理后台查看或者根据此 IP 的制造商进行推断。\n最后推荐将设备连接Wifi的IPV4地址改为手动，因为你如果你启用了自动DHCP的话，有可能下次连接这个WIFI时IP地址就会改变，如果连接失败，可以按照以下的配置将IPV4地址改为手动即可。\n至此，家里的想要一起科学上网的设备都可以通过 Mac 电脑这个网络枢纽一起愉快玩耍了！\n特殊情况 一开始使用的时候，我遇到过用surge作为网关的 Mac 可以打开网页的 youtube 视频并且能观看，但是家里其他设备通过wifi连接的缺不能访问 google，检查一下是可以打开 youtube App，但是只能看到视频的缩略图，进一步点击打开视频观看，却始终是 loading状态，无法观看。奇怪的是可以打开Netflix，正常看剧。\n这种情况查找到解决的办法是，在你需要访问 YouTube 的设备上把连接的 wifi 的 DNS配置修改一下，从自动改为手动，并添加一个 DNS 服务器 192.0.2.2\n至于为什么设置为这个DNS地址我也不是很清楚，只知道手册上是这样写的🐶，这样就把 YouTube 不能访问的问题就解决了！\n总结 以后有其他设备想要愉快上网，都可以通过这台被 Surge 附魔的 Mac 电脑作为转发代理，省下了加速器的年费，还比加速器好使，覆盖范围更广，但需要的是这台 Mac 电脑要一直开着，不然家里其他的设备都上不了网。\n这篇文章只是简单使用了 Surge 的简单功能（规则访问策略并没有定制化），用户还可以对 Surge 进行很多定制化的改造，这些更深入的功能就等以后慢慢发掘吧，先去愉快地玩我新到的 Switch 啦，有什么好玩的游戏，欢迎推荐！\n参考资料 Surge 把你的 Mac 变成最强路由器 Surge 使用手册 Surge 教程 Surge 论坛 家庭网络部署心得 ","permalink":"http://www.lmingyu.tech/posts/tech/%E5%88%A9%E7%94%A8surge%E6%8A%8Amac%E5%8F%98%E6%88%90%E5%AE%B6%E4%B8%AD%E7%BD%91%E7%BB%9C%E6%9E%A2%E7%BA%BD/","summary":"\u003cblockquote\u003e\n\u003cp\u003e本文记录如何使用 Surge 将家中的 Mac 电脑成为家中其他设备科学上网的中转站。\u003c/p\u003e\n\u003c/blockquote\u003e","title":"利用Surge把Mac变成家中网络枢纽"},{"content":" 常用系列就是记录自己编程常用的东西，此文为常用系列第 1 篇，用于记录自己日常开发编程时常用的 Linux 命令，以便需要时查找。\n文件操作命令 查看目录 ls # 回到上一个目录 cd - # 显示所有文件 ls -a # 显示目录中的文件按照修改时间排序 ls -lht tree 展示当前目录的文件结构\n# 展示当前目录的文件结构 tree -FC / -a：展示隐藏文件 -C: 颜色显示 -L 2: 只显示2层 -F: 显示目录后面的\\；显示可执行文件*；功能类似ls -F 修改文件权限 # 修改文件权限 chmod # 给xxx添加可写权限，常用于给需要运行的脚本赋予权限 chmod +x xxx # 给xxx添加可读权限 chmod +r xxx # 将xxx的权限改成777 ，所有人都对这个文件可读可写可运行 chmod 777 xxx # 递归修改整个文件夹的权限 chmod 777 xxx -R 查看文件内容 more # 浏览文件内容 more \u0026lt;filename\u0026gt; 回车：下一行 空格：下一页 # 页面进度增加36% b：上一页 q：退出 less # 与more类似，功能更全 less 回车：下一行 y：上一行 Page Down：下一页 Page Up：上一页 q：退出 tail # 展示文件末尾3行内容 tail -3 \u0026lt;filename\u0026gt; # 常用于观察日志写入过程 tail -f -n 1000 \u0026lt;filename\u0026gt; 管道相关 wc # 输出结果依次为统计行数、单词数、字节数 wc wc -l：统计行数 wc -w：统计单词数 wc -c：统计字节数 grep # 在文件中过滤出给定的match_patten grep match_patten \u0026lt;file\u0026gt; 常用参数 -c 统计文件中包含文本的次数 -n 打印匹配的行号 -i 搜索时忽略大小写 # 从stdin中读入若干行数据，如果某行中包含xxx，则输出该行。--color代表高亮显示 grep xxx --color # 在多级目录中对文本递归搜索(程序员搜代码的最爱） grep \u0026#34;class\u0026#34; . -R -n # 找到使用过的命令 history | grep \u0026lt;命令\u0026gt; xargs xargs 能够将输入数据转化为特定命令的命令行参数；这样，可以配合很多命令来组合使用。比如 grep，find；\nxargs参数说明 -d 定义定界符 （默认为空格 多行的定界符为 n） -n 指定输出为多行 -I {} 指定替换字符串，这个字符串在xargs扩展时会被替换掉,用于待执行的命令需要多个参数时 -0：指定0为输入定界符 将多行输出转化为单行输出 cat file.txt| xargs 将单行转化为多行输出，-n：指定每行显示的字段数 cat single.txt | xargs -n 3 cat file.txt | xargs -I {} ./command.sh -p {} -1 cut 用于从每行中删除部分内容\n#分割一行内容，从stdin中读入多行数据 示例： echo $PATH | cut -d \u0026#39;:\u0026#39; -f 3,5 输出PATH用:分割后第3、5列数据 echo $PATH | cut -d \u0026#39;:\u0026#39; -f 3-5 输出PATH用:分割后第3-5列数据 echo $PATH | cut -c 3,5 输出PATH的第3、5个字符 echo $PATH | cut -c 3-5 输出PATH的第3-5个字符 查找文件 locate 按照路径名查找文件，查找的范围在 /var/lib/mlocate/ 这个数据库中，存储在内存中，每天更新一次，所以无法用 locate 搜索新建的文件，可以使用 updatedb 来立即更新数据库。\n系统如果没有自带locate命令，可以使用yum install mlocate -y安装，安装结束执行updatedb命令\n# 查找名称含有 zip 文件 lcoate zip find命令 以文件名查找文件\n# 搜索某个文件路径下的所有*.py文件 find /path/to/directory/ -name \u0026#39;*.py\u0026#39; # 忽略大小写搜索 find /home -iname \u0026#34;*.txt\u0026#34; # 当前目录及子目录下查找所有以.txt 和.pdf 结尾的文件 find . -name \u0026#34;*.txt\u0026#34; -o -name \u0026#34;*.pdf\u0026#34; # 查看当前目录下文件个数 find ./ | wc -l # 按类型搜索，只列出所有目录，-type f 文件 / l 符号链接 / d 目录 find . -type d -print # 限定查找文件的大小，+1M 代表查找大于 1M 的文件 find ./ -type f -name \u0026#34;*.py\u0026#34; -size +1M # 删除符合条件的文件，下面的命令能够当前删除当前目录下后缀为 .bak 的文件 find ./ -type f -name \u0026#34;*.bak\u0026#34; -delete sed文本替换 sed一般用于对文本内容做替换，操作时是逐行操作\nsed的基本工作方式是：\n将文件以行为单位读取到内存（这个内存也叫模式空间） 使用sed的每个脚本对该行进行操作 处理完成后输出该行 格式\nsed ‘操作命令’ 一个或多个文件\nsed的替换命令s: sed \u0026#39;s/旧的字符串/新的字符串/\u0026#39; 文件名 sed接多个指令 sed -e \u0026#39;s/旧的字符串/新的字符串/\u0026#39; -e \u0026#39;s/旧的字符串/新的字符串/\u0026#39; 文件名 首处替换 sed \u0026#39;s/text/replace_text/\u0026#39; file //替换每一行的第一处匹配的text 全局替换 sed \u0026#39;s/text/replace_text/g\u0026#39; file 默认替换后，输出替换后的内容，如果需要直接替换原文件,使用-i: sed -i \u0026#39;s/text/repalce_text/g\u0026#39; file 移除空白行 sed \u0026#39;/^$/d\u0026#39; file 第一个匹配的括号内容使用标记 1 来引用 sed \u0026#39;s/hello\\([0-9]\\)/\\1/\u0026#39; file Bash键盘技巧 # 将光标移到行首第一个字符 Ctl + a # 将光标移到行首第一个字符 Ctl + e # 删除光标到行首的所有字符 Ctl + u # 常用： # 删除输入的内容 Ctl + e + Ctl + u 归档与备份 gzip 压缩单个或多个文件\ngzip foo.text gunzip 解压文件\n# 压缩，生成foo.txt.gz gunzip foo.text zip 压缩和归档成 .zip 文件\nzip -r text.zip text unzip 解压 .zip 的文件\nunzip text.zip tar 归档多个文件或目录\n# 打包与 gzip 配合 tar -zcvf \u0026lt;打包压缩后的文件名\u0026gt; \u0026lt;要打包压缩的文件\u0026gt; z：调用 gzip 压缩命令进行压缩 c：打包文件 v：显示运行过程 f：指定文件名 # 解压 tar -zxvf test.tar.gz -C /usr**（- C 代表指定解压的位置） x：代表解包 磁盘管理 查看磁盘空间 # 查看磁盘空间利用大小:-h: human缩写，以易读的方式显示结果 df -hT # 查看当前目录所占空间大小，-s 递归整个目录的大小 du -sh # 查看当前目录下所有子文件夹排序后的大小: for i in `ls`; do du -sh $i; done | sort 或者： du -sh `ls` | sort 进程管理工具 查询进程 ps # 查询正在运行的进程信息: # VSZ-虚拟内存大小 RSS-该进程占用的 RAM 数量 ps -aux/ ps -ef top # 显示进程信息，并实时更新 top 打开后，输入M：按使用内存排序 打开后，输入P：按使用CPU排序,查看系统中使用CPU、使用内存最多的进程 打开后，输入i:使top不显示任何闲置或者僵死进程 打开后，输入q：退出 lsof # 查看端口占用的进程状态： lsof -i:3306 # 查看用户username的进程所打开的文件 lsof -u username # 查询init进程当前打开的文件 lsof -c init 其他 # 查询进程ID（适合只记得部分进程字段） pgrep -l \u0026lt;进程名\u0026gt; # 查看占用端口的进程 netstat -anp | grep port 终止进程 # 杀死指定PID的进程 (PID为Process ID) kill PID # 杀死相关进程 kill -9 3434 # 杀死job工作 (job为job number) kill %job 分析线程栈 使用命令pmap，来输出进程内存的状况，可以用来分析线程堆栈；\npmap PID 性能监控 监控CPU # 查看CPU使用率 sar -u eg: $sar -u 1 2 后面的两个参数表示监控的频率，比如例子中的1和2，表示每秒采样一次，总共采样2次； # 查看CPU平均负载，sar指定-q后，就能查看运行队列中的进程数、系统上的进程大小、平均负载等； sar -q 1 2 查询内存 # 查看内存使用状况 sar指定-r之后，可查看内存使用状况; sar -rh 1 2 # 查看内存使用量 free -mh 查询端口占用 # 查看当前系统端口使用情况 netstat -an # 展示进程加被占用的端口 netstat -ntlp 查询页面交换 查看页面交换发生状况 页面发生交换时，服务器的吞吐量会大幅下降；服务器状况不良时，如果怀疑因为内存不足而导致了页面交换的发生，可以使用sar -W这个命令来确认是否发生了大量的交换；\nsar -W 1 3 综合应用 当系统中sar不可用时，可以使用以下工具替代：linux下有 vmstat、Unix系统有prstat\neg： 查看cpu、内存、使用情况： vmstat n m （n 为监控频率、m为监控次数）\nvmstat 1 3 procs -----------memory---------- ---swap-- -----io---- -system-- ----cpu---- r b swpd free buff cache si so bi bo in cs us sy id wa 0 0 86560 42300 9752 63556 0 1 1 1 0 0 0 0 99 0 1 0 86560 39936 9764 63544 0 0 0 52 66 95 5 0 95 0 0 0 86560 42168 9772 63556 0 0 0 20 127 231 13 2 84 0 使用watch 工具监控变化 当需要持续的监控应用的某个数据变化时，watch工具能满足要求； 执行watch命令后，会进入到一个界面，输出当前被监控的数据，一旦数据变化，便会高亮显示变化情况；\neg：操作redis时，监控内存变化：\nwatch -d -n 1 \u0026#39;./redis-cli info | grep memory\u0026#39; (以下为watch工具中的界面内容，一旦内存变化，即实时高亮显示变化） Every 1.0s: ./redis-cli info | grep memory Mon Apr 28 16:10:36 2014 used_memory:45157376 used_memory_human:43.07M used_memory_rss:47628288 used_memory_peak:49686080 used_memory_peak_human:47.38M 系统网络状况 ping 向指定的主机发送 ICMP 数据包，用于确认与主机的网络连接。发送的时间间隔为 1 s，用 Ctrl + C中断发送，正常网络会显示 0% 的分组丢失率\n# 检查是否连网 ping www.baidu.com traceroute 会列出网络从本地到注定主机经过的所有跳数\n# 会显示经过路由器的主机名、IP地址及本地到该路由器3个往返时间采样数据 traceroute -I www.baidu.com ip 是一个多功能的网络配置工具，用于检查系统的网络接口和路由表\n会显示多个网络接口，常见接口： lo：环回接口，是一个虚拟接口，系统用于 “和自己对话” eth0: 以太网接口 接口第一行如果含有 UP字样，表明该接口已启用 第3行 inet 字段为该网络接口的 IP 地址 # ~$ ip a 1: lo: \u0026lt;LOOPBACK,UP,LOWER_UP\u0026gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever 2: eth0: \u0026lt;BROADCAST,MULTICAST,UP,LOWER_UP\u0026gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000 link/ether 00:16:3e:0e:a0:8b brd ff:ff:ff:ff:ff:ff inet 172.30.140.229/20 brd 172.30.143.255 scope global dynamic eth0 valid_lft 310094870sec preferred_lft 310094870sec inet6 fe80::216:3eff:fe0e:a08b/64 scope link valid_lft forever preferred_lft forever 3: docker0: \u0026lt;NO-CARRIER,BROADCAST,MULTICAST,UP\u0026gt; mtu 1500 qdisc noqueue state DOWN group default link/ether 02:42:53:b2:cd:34 brd ff:ff:ff:ff:ff:ff inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0 valid_lft forever preferred_lft forever netstat 用于检查各种网路设置和统计信息，需安装net-tools yum install net-tools\n# 检查系统的网络接口 netstat -ie # 查看所有网络连接 netstat -nt ssh 用于本地主机与远程主机进行通信\n# 需要输入 remote-sys 主机 ubuntu 用户的登录密码 ssh ubuntu@remote-sys 其他常用命令 # 常与别名命令 alias 一起使用，=号两边不能有空格，被别名的命令需要用单引号包含 alias ll=\u0026#39;ls -alh\u0026#39; # 查看两个文件间的差别: diff file1 file2 # 查看带有SVN的环境变量值： env | grep SVN 参考资料 Linux基础 - Linux Tools Quick Tutorial\nLinux命令手册\n工作中常用的的 Linux 命令\nLinux 命令搜索\n","permalink":"http://www.lmingyu.tech/posts/tech/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","summary":"\u003cblockquote\u003e\n\u003cp\u003e常用系列就是记录自己编程常用的东西，此文为常用系列第 1 篇，用于记录自己日常开发编程时常用的 Linux 命令，以便需要时查找。\u003c/p\u003e\n\u003c/blockquote\u003e","title":"常用系列-Linux 常用命令"},{"content":"","permalink":"http://www.lmingyu.tech/links/","summary":"","title":""},{"content":" 名字 Taiming Liang 坐标 广东 深圳 职业 后端程序员 描述 努力往独立开发者 💻 迈进 💪 尝试以英语为切入点重新认识世界 🌍 想以非功利的方式去阅读 📖 很高兴认识你! ─=≡Σ(((つ•̀ω•́)つ)) ","permalink":"http://www.lmingyu.tech/about/","summary":"名字 Taiming Liang 坐标 广东 深圳 职业 后端程序员 描述 努力往独立开发者 💻 迈进 💪 尝试以英语为切入点重新认识世界 🌍 想以非功利的方式去阅读 📖 很高兴认识你! ─=≡Σ","title":"👨‍💻个人画像"}]